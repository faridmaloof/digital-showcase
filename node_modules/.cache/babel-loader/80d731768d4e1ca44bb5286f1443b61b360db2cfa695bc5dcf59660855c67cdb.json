{"ast":null,"code":"var _jsxFileName = \"D:\\\\repos\\\\digital-portfolio\\\\src\\\\components\\\\Experience.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { formatDateRange } from '../utils/dateFormatter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experience = ({\n  experience\n}) => {\n  _s();\n  const [showAll, setShowAll] = useState(false);\n  const featuredExperience = experience.filter(job => job.featured);\n  const visibleExperience = showAll ? experience : featuredExperience;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Experiencia Profesional\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), visibleExperience.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [job.title, \" at \", job.company]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: formatDateRange(job.startDate, job.endDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: job.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)), experience.length > featuredExperience.length && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAll(!showAll),\n      className: \"toggle-button\",\n      children: showAll ? 'Mostrar solo destacada' : 'Mostrar toda la experiencia'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Experience, \"XC0nqMp5RnZIWkiCcJL//MdTvak=\");\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","useState","formatDateRange","jsxDEV","_jsxDEV","Experience","experience","_s","showAll","setShowAll","featuredExperience","filter","job","featured","visibleExperience","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","title","company","startDate","endDate","description","length","onClick","_c","$RefreshReg$"],"sources":["D:/repos/digital-portfolio/src/components/Experience.tsx"],"sourcesContent":["import React, { useState, FC } from 'react';\r\nimport { formatDateRange } from '../utils/dateFormatter';\r\n\r\ninterface Job {\r\n  company: string;\r\n  title: string;\r\n  startDate: { year: number; month?: string };\r\n  endDate: { year: number; month?: string } | string;\r\n  description: string;\r\n  featured: boolean;\r\n}\r\n\r\ninterface Props {\r\n  experience: Job[];\r\n}\r\n\r\nconst Experience: FC<Props> = ({ experience }) => {\r\n  const [showAll, setShowAll] = useState(false);\r\n  const featuredExperience = experience.filter(job => job.featured);\r\n  const visibleExperience = showAll ? experience : featuredExperience;\r\n\r\n  return (\r\n    <section className=\"card\">\r\n      <h3>Experiencia Profesional</h3>\r\n      {visibleExperience.map((job, index) => (\r\n        <div key={index} className=\"job\">\r\n          <h4>{job.title} at {job.company}</h4>\r\n          <p><em>{formatDateRange(job.startDate, job.endDate)}</em></p>\r\n          <p>{job.description}</p>\r\n        </div>\r\n      ))}\r\n      {experience.length > featuredExperience.length && (\r\n        <button onClick={() => setShowAll(!showAll)} className=\"toggle-button\">\r\n          {showAll ? 'Mostrar solo destacada' : 'Mostrar toda la experiencia'}\r\n        </button>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Experience;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAY,OAAO;AAC3C,SAASC,eAAe,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAezD,MAAMC,UAAqB,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMS,kBAAkB,GAAGJ,UAAU,CAACK,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,QAAQ,CAAC;EACjE,MAAMC,iBAAiB,GAAGN,OAAO,GAAGF,UAAU,GAAGI,kBAAkB;EAEnE,oBACEN,OAAA;IAASW,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACvBZ,OAAA;MAAAY,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/BN,iBAAiB,CAACO,GAAG,CAAC,CAACT,GAAG,EAAEU,KAAK,kBAChClB,OAAA;MAAiBW,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAC9BZ,OAAA;QAAAY,QAAA,GAAKJ,GAAG,CAACW,KAAK,EAAC,MAAI,EAACX,GAAG,CAACY,OAAO;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrChB,OAAA;QAAAY,QAAA,eAAGZ,OAAA;UAAAY,QAAA,EAAKd,eAAe,CAACU,GAAG,CAACa,SAAS,EAAEb,GAAG,CAACc,OAAO;QAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7DhB,OAAA;QAAAY,QAAA,EAAIJ,GAAG,CAACe;MAAW;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHhBE,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN,CAAC,EACDd,UAAU,CAACsB,MAAM,GAAGlB,kBAAkB,CAACkB,MAAM,iBAC5CxB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMpB,UAAU,CAAC,CAACD,OAAO,CAAE;MAACO,SAAS,EAAC,eAAe;MAAAC,QAAA,EACnER,OAAO,GAAG,wBAAwB,GAAG;IAA6B;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd,CAAC;AAACb,EAAA,CAtBIF,UAAqB;AAAAyB,EAAA,GAArBzB,UAAqB;AAwB3B,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}