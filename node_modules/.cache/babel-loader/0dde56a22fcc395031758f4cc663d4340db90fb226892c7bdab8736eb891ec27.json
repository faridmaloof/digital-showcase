{"ast":null,"code":"const monthNames = {\n  \"Ene\": \"Enero\",\n  \"Feb\": \"Febrero\",\n  \"Mar\": \"Marzo\",\n  \"Abr\": \"Abril\",\n  \"May\": \"Mayo\",\n  \"Jun\": \"Junio\",\n  \"Jul\": \"Julio\",\n  \"Ago\": \"Agosto\",\n  \"Sep\": \"Septiembre\",\n  \"Oct\": \"Octubre\",\n  \"Nov\": \"Noviembre\",\n  \"Dic\": \"Diciembre\"\n};\nconst formatDate = dateObj => {\n  if (typeof dateObj === 'string') return dateObj;\n  if (!dateObj || !dateObj.year) return '';\n  const month = dateObj.month ? `${monthNames[dateObj.month] || dateObj.month} ` : '';\n  const day = dateObj.day ? `${dateObj.day} ` : '';\n  return `${day}${month}${dateObj.year}`;\n};\nexport const formatDateRange = (startDate, endDate) => {\n  const start = formatDate(startDate);\n  if (!endDate) {\n    return start;\n  }\n  const end = formatDate(endDate);\n  return start === end ? start : `${start} - ${end}`;\n};","map":{"version":3,"names":["monthNames","formatDate","dateObj","year","month","day","formatDateRange","startDate","endDate","start","end"],"sources":["D:/repos/digital-portfolio/src/utils/dateFormatter.ts"],"sourcesContent":["interface DateObject {\r\n  year: number;\r\n  month?: string;\r\n  day?: number;\r\n}\r\n\r\nconst monthNames: { [key: string]: string } = {\r\n  \"Ene\": \"Enero\", \"Feb\": \"Febrero\", \"Mar\": \"Marzo\", \"Abr\": \"Abril\", \"May\": \"Mayo\", \"Jun\": \"Junio\",\r\n  \"Jul\": \"Julio\", \"Ago\": \"Agosto\", \"Sep\": \"Septiembre\", \"Oct\": \"Octubre\", \"Nov\": \"Noviembre\", \"Dic\": \"Diciembre\"\r\n};\r\n\r\nconst formatDate = (dateObj: DateObject | string): string => {\r\n  if (typeof dateObj === 'string') return dateObj;\r\n  if (!dateObj || !dateObj.year) return '';\r\n\r\n  const month = dateObj.month ? `${monthNames[dateObj.month] || dateObj.month} ` : '';\r\n  const day = dateObj.day ? `${dateObj.day} ` : '';\r\n  return `${day}${month}${dateObj.year}`;\r\n};\r\n\r\nexport const formatDateRange = (startDate: DateObject, endDate?: DateObject | string): string => {\r\n  const start = formatDate(startDate);\r\n  \r\n  if (!endDate) {\r\n    return start;\r\n  }\r\n  \r\n  const end = formatDate(endDate);\r\n  \r\n  return start === end ? start : `${start} - ${end}`;\r\n};"],"mappings":"AAMA,MAAMA,UAAqC,GAAG;EAC5C,KAAK,EAAE,OAAO;EAAE,KAAK,EAAE,SAAS;EAAE,KAAK,EAAE,OAAO;EAAE,KAAK,EAAE,OAAO;EAAE,KAAK,EAAE,MAAM;EAAE,KAAK,EAAE,OAAO;EAC/F,KAAK,EAAE,OAAO;EAAE,KAAK,EAAE,QAAQ;EAAE,KAAK,EAAE,YAAY;EAAE,KAAK,EAAE,SAAS;EAAE,KAAK,EAAE,WAAW;EAAE,KAAK,EAAE;AACrG,CAAC;AAED,MAAMC,UAAU,GAAIC,OAA4B,IAAa;EAC3D,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE,OAAOA,OAAO;EAC/C,IAAI,CAACA,OAAO,IAAI,CAACA,OAAO,CAACC,IAAI,EAAE,OAAO,EAAE;EAExC,MAAMC,KAAK,GAAGF,OAAO,CAACE,KAAK,GAAG,GAAGJ,UAAU,CAACE,OAAO,CAACE,KAAK,CAAC,IAAIF,OAAO,CAACE,KAAK,GAAG,GAAG,EAAE;EACnF,MAAMC,GAAG,GAAGH,OAAO,CAACG,GAAG,GAAG,GAAGH,OAAO,CAACG,GAAG,GAAG,GAAG,EAAE;EAChD,OAAO,GAAGA,GAAG,GAAGD,KAAK,GAAGF,OAAO,CAACC,IAAI,EAAE;AACxC,CAAC;AAED,OAAO,MAAMG,eAAe,GAAGA,CAACC,SAAqB,EAAEC,OAA6B,KAAa;EAC/F,MAAMC,KAAK,GAAGR,UAAU,CAACM,SAAS,CAAC;EAEnC,IAAI,CAACC,OAAO,EAAE;IACZ,OAAOC,KAAK;EACd;EAEA,MAAMC,GAAG,GAAGT,UAAU,CAACO,OAAO,CAAC;EAE/B,OAAOC,KAAK,KAAKC,GAAG,GAAGD,KAAK,GAAG,GAAGA,KAAK,MAAMC,GAAG,EAAE;AACpD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}